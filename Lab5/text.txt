1. Χωρίς αμοιβαίο αποκλεισμό

Υλοποιήστε έναν παράλληλο αλγόριθμο για τον υπολογισμό του π με αριθμητική ολοκλήρωση, 
βασισμένο στην εξής ιδέα:

Χωρίστε την εργασία σε N νήματα.
Κάθε νήμα υπολογίζει το τοπικό του άθροισμα για ένα υποσύνολο του ολοκληρώματος, χωρίς να μοιράζεται δεδομένα με τα υπόλοιπα νήματα.
Στο τέλος, ενώστε τα τοπικά αθροίσματα στον κύριο κώδικα (main thread) για να υπολογίσετε το συνολικό αποτέλεσμα.

Μην χρησιμοποιήσετε κανενός είδους συγχρονισμό ή αμοιβαίο αποκλεισμό.


2. Με χρήση Lock
Τροποποιήστε τον παραπάνω παράλληλο αλγόριθμο έτσι ώστε όλα τα νήματα να γράφουν τα αποτελέσματά τους σε μια κοινόχρηστη μεταβλητή με ασφαλή τρόπο.

Χρησιμοποιήστε έναν κοινόχρηστο μετρητή (SharedCounter) που θα περιέχει:
-Μια μεταβλητή sum για το συνολικό αποτέλεσμα.
-Ένα Lock για να ελέγχετε την αποκλειστική πρόσβαση στη μεταβλητή.
-Κάθε νήμα υπολογίζει το τοπικό του άθροισμα και στη συνέχεια προσθέτει το αποτέλεσμα στη μεταβλητή sum μέσω του Lock.
Ο κύριος κώδικας (main thread) αναμένει να ολοκληρωθούν τα νήματα και επιστρέφει το συνολικό αποτέλεσμα.



3.Με χρήση synchronized
Τροποποιήστε τον πρώτο παράλληλο αλγόριθμο έτσι ώστε να χρησιμοποιήσετε τη λέξη-κλειδί synchronized αντί για Lock για τον αμοιβαίο αποκλεισμό.

Υλοποιήστε έναν κοινόχρηστο μετρητή (SharedCounter) που θα περιέχει:
-Μια μεταβλητή sum για το συνολικό αποτέλεσμα.
-Μια συγχρονισμένη μέθοδο inc, η οποία θα προσθέτει το τοπικό αποτέλεσμα στη sum.
Κ-άθε νήμα υπολογίζει το τοπικό του άθροισμα και στη συνέχεια καλεί τη μέθοδο inc για να προσθέσει το αποτέλεσμα στο κοινό άθροισμα.
Ο κύριος κώδικας (main thread) αναμένει να ολοκληρωθούν τα νήματα και επιστρέφει το συνολικό αποτέλεσμα.
.
